x <- 42
x/ 2
40 + 2
x <- c(1:5)
plot(x)
source('test.R')
for (i in 1:5) {
writeLines(c)
writeLines(x)
}
writeLines("Hello")
}
x <- c(1:5)
for (i in 1:5) {
writeLines("Hello")
}
x <- c(1:5)
for (i in 1:5) {
writeLines("Hello")
}
x <- c(1:5)
for (i in 1:5) {
writeLines(x[i])
}
x <- c(1:5)
for (i in 1:5) {
x[i]
}
x <- rnorm(3000)
# obliczenie histogramu (bez rysowania) dla 50 przedziałów
histX <- hist(x, breaks=50, plot=FALSE)
# wykreślenie histogramu z kolorem wypełnienia słupków ustawionym na czerwony
plot(histX, col="red")
test <- read.csv("E:/Git/BIAI-projekt/Data/test.csv")
View(test)
training <- read.csv("E:/Git/BIAI-projekt/Data/training.csv")
View(training)
for (i in 1:5) {
writeLines("Hello World")
}
writeLines("Hello World")
> sink("outfile.txt")
> cat("hello")
> cat("\n")
> cat("world")
> sink()
sink("outfile.txt")
cat("hello")
cat("\n")
cat("world")
sink()
setwd("~/Visual Studio 2012/Projects/ConsoleApplication1/ConsoleApplication1")
setwd("~/Visual Studio 2012/Projects/ConsoleApplication1/ConsoleApplication1")
train <- read.csv("training.csv", stringsAsFactors = FALSE)
setwd("E:/Git/BIAI-projekt/Data")
train <- read.csv("training.csv", stringsAsFactors = FALSE)
View(train)
View(training)
table(train$good)
prop.table((train$good))
prop.table(table(train$good))
str(train)
prop.table(table(train$good))
test <- read.csv("test.csv", stringsAsFactors = FALSE)
test <- read.csv("test.csv", stringsAsFactors = FALSE)
View(test)
test$good <- rep(0, 12000)
submit <- data.frame(PhotoId = test$id, goog = test$good)
submit <- data.frame(PhotoId = test$id, good = test$good)
write.csv(submit, file="beginning.csv", row.names = FALSE)
submit <- data.frame(PhotoId = test$id, good = test$good)
write.csv(submit, file="beginning.csv", row.names = FALSE)
prop.table(table(train$good))
table(train$good)
str(train)
summary(train$size)
source('test.R')
source('test.R')
q()
train <- read.csv("CSV/training.csv", stringsAsFactors = FALSE)
test <- read.csv("CSV/test.csv", stringsAsFactors = FALSE)
write.csv(submit, file="CSV/beginning.csv", row.names = FALSE)
summary(train$size)
